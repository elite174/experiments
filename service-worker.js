"use strict";var precacheConfig=[["/experiments/index.html","73296f30acda6bffaec80020ae0b552e"],["/experiments/static/css/main.7b742b25.css","3a24a9910fcb43777aa69bd3eb18de76"],["/experiments/static/js/0.14441baa.chunk.js","7118ecba1e885bf4c88d3cce7bf10c8c"],["/experiments/static/js/1.6749e85b.chunk.js","679743b29ba8b82ffa1b421dc5b3408f"],["/experiments/static/js/2.cd8ce471.chunk.js","113c9ac91298be56a5684e65df786fd9"],["/experiments/static/js/3.e90ff72c.chunk.js","732a133e9cc75284f1ccae40e727316e"],["/experiments/static/js/4.56c5610a.chunk.js","645cc4e01bcce656e28033c39762bbdd"],["/experiments/static/js/main.02381f4e.js","93d00b6ac12cfc33d1cfd7d52a18f3e4"],["/experiments/static/media/detroit.4602d303.png","4602d303a6e979a07dced1effc0af30f"],["/experiments/static/media/detroit.c0b4ecd3.gif","c0b4ecd33d3e0ffa8b1c6bc357adb64c"],["/experiments/static/media/galaxy-1.33ce2151.jpg","33ce215122235abe4317b4e0a6ac8ae3"],["/experiments/static/media/galaxy-2.1af7650c.jpg","1af7650c286dfda3657530953878ccbd"],["/experiments/static/media/galaxy-4.90512c5f.jpg","90512c5f87ffad97a130bd359941da81"],["/experiments/static/media/galaxy-5.882a4fa2.jpg","882a4fa27ad21d9ad3ccb5868f53a169"],["/experiments/static/media/graph.aa8bacb8.gif","aa8bacb8bd60ddcd942e60fe25fefc31"],["/experiments/static/media/shader.9809084b.glsl","9809084b0915fb5659567169c610b6f3"],["/experiments/static/media/squares.c13fe6be.gif","c13fe6be2ea4b0a91bae0a69b387e2ac"],["/experiments/static/media/tree.8031b509.jpg","8031b509b966540914300251bff02ca3"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/experiments/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});